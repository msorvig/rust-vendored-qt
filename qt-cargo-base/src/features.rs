// Qt default features and defines;

#[allow(dead_code)]
pub fn global_features() -> Vec<(&'static str, bool)> {
    vec![
        ("shared", false),
        ("static", true),
        ("cross_compile", false),
        ("pkg_config", false),
        ("debug_and_release", false),
        ("separate_debug_info", false),
        ("rpath", false),
        ("force_asserts", false),
        ("cxx11", true),
        ("cxx14", true),
        ("cxx17", true),
        ("cxx1z", true),
        ("cxx20", false),
        ("cxx2a", false),
        ("c99", true),
        ("c11", true),
        ("cxx17_filesystem", true),
        ("signaling_nan", true),
        ("thread", true),
        ("future", true),
        ("concurrent", true),
        ("dbus", false),
    ]
}

#[allow(dead_code)]
pub fn global_private_features() -> Vec<(&'static str, bool)> {
    vec![
        ("android_style_assets", false),
        ("gc_binaries", false),
        ("use_bfd_linker", false),
        ("use_gold_linker", false),
        ("use_lld_linker", false),
        ("private_tests", true),
        ("reduce_exports", true),
        ("reduce_relocations", true),
        ("sse2", true),
        ("sse3", true),
        ("ssse3", true),
        ("sse4_1", true),
        ("sse4_2", true),
        ("avx", true),
        ("f16c", true),
        ("avx2", true),
        ("avx512f", true),
        ("avx512er", true),
        ("avx512cd", true),
        ("avx512pf", true),
        ("avx512dq", true),
        ("avx512bw", true),
        ("avx512vl", true),
        ("avx512ifma", true),
        ("avx512vbmi", true),
        ("aesni", true),
        ("rdrnd", true),
        ("rdseed", true),
        ("shani", true),
        ("mips_dsp", false),
        ("mips_dspr2", false),
        ("neon", false),
        ("posix_fallocate", false),
        ("alloca_h", true),
        ("alloca_malloc_h", false),
        ("alloca", true),
        ("stack_protector_strong", false),
        ("system_zlib", true),
        ("zstd", false),
        //        ("dbus", true),
        ("dbus_linked", false),
        ("gui", true),
        ("network", true),
        ("printsupport", true),
        ("sql", true),
        ("testlib", true),
        ("widgets", true),
        ("xml", true),
        ("libudev", false),
        ("dlopen", true),
        ("relocatable", true),
        ("intelcet", false),
    ]
}

#[allow(dead_code)]
pub fn global_defines() -> Vec<(&'static str, &'static str)> {
    vec![
        ("QT_VERSION_STR", "\"6.2.0\""),
        ("QT_VERSION_MAJOR", "6"),
        ("QT_VERSION_MINOR", "2"),
        ("QT_VERSION_PATCH", "0"),
        ("QT_BUILD_INTERNAL", ""),
        ("QT_LARGEFILE_SUPPORT", "64"),
        ("QT_VISIBILITY_AVAILABLE", ""),
        ("QT_REDUCE_RELOCATIONS", ""),
        ("QT_COMPILER_SUPPORTS_SSE2", "1"),
        ("QT_COMPILER_SUPPORTS_SSE3", "1"),
        ("QT_COMPILER_SUPPORTS_SSSE3", "1"),
        ("QT_COMPILER_SUPPORTS_SSE4_1", "1"),
        ("QT_COMPILER_SUPPORTS_SSE4_2", "1"),
        ("QT_COMPILER_SUPPORTS_AVX", "1"),
        ("QT_COMPILER_SUPPORTS_F16C", "1"),
        ("QT_COMPILER_SUPPORTS_AVX2", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512F", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512ER", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512CD", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512PF", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512DQ", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512BW", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512VL", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512IFMA", "1"),
        ("QT_COMPILER_SUPPORTS_AVX512VBMI", "1"),
        ("QT_COMPILER_SUPPORTS_AES", "1"),
        ("QT_COMPILER_SUPPORTS_RDRND", "1"),
        ("QT_COMPILER_SUPPORTS_RDSEED", "1"),
        ("QT_COMPILER_SUPPORTS_SHA", "1"),
        ("QT_COMPILER_SUPPORTS_SIMD_ALWAYS", "1"),
    ]
}

#[allow(dead_code)]
pub fn qt_bootstrap_features() -> Vec<(&'static str, bool)> {
    vec![
        ("alloca", true),
        ("alloca_malloc_h", false),
        ("cborstreamreader", false),
        ("cborstreamwriter", true),
        ("cxx11_random", true),
        ("cxx17_filesystem", false),
        ("datestring", true),
        ("datetimeparser", false),
        ("easingcurve", false),
        ("etw", false),
        ("getauxval", false),
        ("getentropy", false),
        ("hijricalendar", false),
        ("icu", false),
        ("islamiccivilcalendar", false),
        ("jalalicalendar", false),
        ("journald", false),
        ("futimens", false),
        ("futimes", false),
        ("itemmodel", false),
        ("library", false),
        ("linkat", false),
        ("lttng", false),
        ("process", false),
        ("regularexpression", true),
        ("renameat2", false),
        ("sharedmemory", false),
        ("shortcut", false),
        ("signaling_nan", false),
        ("slog2", false),
        ("statx", false),
        ("syslog", false),
        ("systemsemaphore", false),
        ("temporaryfile", true),
        ("textdate", true),
        ("thread", false),
        ("timezone", false),
        ("topleveldomain", false),
        ("translation", false),
        ("zstd", false), // # Note: rcc needs zstd
        ("commandlineparser", true),
        ("settings", false),
        ("std_atomic64", false),
    ]
}

#[allow(dead_code)]
pub fn qt_core_features() -> Vec<(&'static str, bool)> {
    vec![
        ("cxx11_future", true),
        ("std_atomic64", true),
        ("doubleconversion", true),
        ("eventfd", false),
        ("glib", true),
        ("inotify", false),
        ("sharedmemory", true),
        ("systemsemaphore", true),
        ("process", true),
        ("processenvironment", true),
        ("clock_monotonic", false),
        ("textdate", true),
        ("datestring", true),
        ("jalalicalendar", true),
        ("islamiccivilcalendar", true),
        ("timezone", true),
        ("xmlstream", true),
        ("xmlstreamreader", true),
        ("xmlstreamwriter", true),
        ("cborstreamreader", true),
        ("cborstreamwriter", true),
        ("itemmodel", true),
        ("proxymodel", true),
        ("sortfilterproxymodel", true),
        ("identityproxymodel", true),
        ("transposeproxymodel", true),
        ("concatenatetablesproxymodel", true),
        ("stringlistmodel", true),
        ("translation", true),
        ("easingcurve", true),
        ("animation", true),
        ("gestures", true),
        ("commandlineparser", true),
        ("temporaryfile", true),
        ("library", true),
        ("settings", true),
        ("filesystemwatcher", true),
        ("filesystemiterator", true),
        ("mimetype", true),
        ("properties", true),
        ("regularexpression", true),
        ("shortcut", true),
    ]
}

#[allow(dead_code)]
pub fn qt_core_private_features() -> Vec<(&'static str, bool)> {
    vec![
        ("clock_gettime", true),
        ("doubleconversion", true),
        ("system_doubleconversion", false),
        ("futimens", true),
        ("futimes", false),
        ("getauxval", false),
        ("getentropy", false),
        ("glib", true),
        ("glibc", true),
        ("icu", false),
        ("inotify", false),
        ("journald", false),
        ("system_libb2", false),
        ("linkat", false),
        ("mimetype_database", true),
        ("system_pcre2", false),
        ("poll_ppoll", false),
        ("poll_pollts", false),
        ("poll_poll", true),
        ("poll_select", false),
        ("qqnx_pps", false),
        ("renameat2", false),
        ("slog2", false),
        ("statx", false),
        ("syslog", false),
        ("backtrace", true),
        ("sha3_fast", true),
        ("hijricalendar", true),
        ("datetimeparser", true),
        ("lttng", false),
        ("etw", false),
        ("forkfd_pidfd", false),
    ]
}

#[allow(dead_code)]
pub fn qt_core_defines() -> Vec<(&'static str, &'static str)> {
    vec![
        ("QT_NO_CLOCK_MONOTONIC", "1"),
        ("QT_NO_EVENTFD", "1"),
        ("QT_NO_GLIB", "1"),
        ("QT_NO_INOTIFY", "1"),
    ]
}

#[allow(dead_code)]
pub fn qt_core_private_defines() -> Vec<(&'static str, &'static str)> {
    vec![]
}
